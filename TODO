Hey Emacs, this is a -*-text-*- file!

                       To Do List for MMM Mode
                       =======================

Font-locking isn't working in XEmacs.  `font-lock-keywords' is getting
set to nil at the wrong time, but I can't pin it down.

If font-locking needs help, try narrowing the region before
fontifying, or even advising `parse-partial-sexp' and friends.

The local-variables improvements can probably be used to set minor
modes locally to submode regions.  This could replace tmmofl,
especially if we search for regions other than by regexps, say by
syntax properties.

Improve re-parsing current region to use inclusion/offsets/etc.

Trap paragraph motion commands to stop at submode boundaries?

Add JDE-mode, JavaSQL (see +mmm), Eperl, ASP, etc.

How about this? Whenever text is inserted anywhere in the buffer:
1. If in or after a region (with hanging back?), scan for its back.
2. If before a region with hanging front, scan for its front?
3. Scan the inserted text for new regions.
Mess with the order of scanning for stuff. Of course this could get
tricky with nested regions, plus we don't want to be too slow while
people are just typing. Maybe just scan changes of length >1?

Use `mmm-looking-back-at' to auto-detect new submode regions in
`after-change-functions'. Say we type "<%" and we're suddenly in a
CPerl region, until we type "%>". Actually, the two-character ending
delimiter makes that tricky. It would probably be nicer all around to
just automatically insert the ending delimiter when the beginning one
is detected, but that must be user-configurable.

When we hit return anywhere in a Mason %-line, it should end the
submode region. If C-j ended it and began a new one on the next line,
that would also be nice. This is a rather Mason-specific thing, so
maybe do it in that class hook. But other classes might have similar
single-line regions. Add a new submode class argument, such as KEYMAP,
or even ONE-LINE?

Allowing nested submode regions.  A submode class can specify its
"parent" submode class.  This could also be used to implement htp.p,
by first scanning for the function calls as a major-mode submode
region, then requiring that parent type for the HTML mode class.
Similarly, eval-elisp could have one class to find the Local Variables
list, then another within it.  Nested submodes should alternate with a
different highlight color, `mmm-secondary-submode-face'.

Ought %text in Mason to be a non-submode, since any Mason tags inside
it will probably be /edited/ as Perl (being, say, code examples)? Only
problem is it might confuse the programmer into thinking that code
will get executed. Maybe use a different face. Could do that with
another grouping class, say uneval-mason, that overrides the faces of
mason and has :parent mason-text.  Lot of duplication though.  Maybe
allow a mode to specify what about it changes (in this case, its face)
if its parent is X, or Y, or whatever.

It'd be nice if submode regions could preserve the indentation of the
dominant major mode code around them. For example, Perl code embedded
in HTML where the HTML is indented such as for a table.
